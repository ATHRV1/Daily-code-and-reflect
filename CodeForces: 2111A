Question:
CodeForces: Educational Codeforces Round 179 (Rated for Div. 2)
A. Energy Crystals
time limit per test: 2 seconds
memory limit per test: 512 megabytes

Solution:
#include <bits/stdc++.h>
using namespace std;

typedef unsigned long long ll;

#define fastio             \
  ios::sync_with_stdio(0); \
  cin.tie(0);
#define forl(i, a, b) for (ll i = a; i < b; ++i)
#define rfor(i, a, b) for (int i = a - 1; i >= b; --i)
#define fora(x, v) for (auto x : v)
#define vi vector<int>
#define vll vector<ll>
#define vs vector<string>
#define vpii vector<pair<int, int>>
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define p(a) cout << a << "\n";
#define p2(a, b) cout << a << " " << b << "\n";
#define YES cout << "YES\n";
#define NO cout << "NO\n";
#define pb push_back
#define pf push_front
#define mp make_pair

const ll mod = 1e9 + 7;

// if wrong answer, never look at it, try to solve and create new testcase on your own

void solve()
{
  ll x;
  cin>>x;
  ll ini=1,mov=3;
  while(ini<x){
    ini=ini*2+1;
    mov+=2;
  }
  p(mov);
}

int main()
{
  fastio;
  ll testcase = 1;
  cin >> testcase;

  while (testcase--)
  {
    solve();
  }
  return 0;
}

Diary:
1. Predict pattern & approach before coding.
I was very excited for this Contest, The Educational Codeforces Contest.

2. Think loud, write down why stuck.
Thouhgt before it was a very heavy question

3. Code brute force if needed â€” clarity > shortcut.
Bruteforce was way harder then one can expect but the trick was to find the pattern

4. After solve: 1 key learning, 1 mistake, 1 pattern.
1 learning: Bruteforce smaller cases and then find the pattern
1 mistake: knew not to make things very complex
1 pattern: Pure maths

5. Maintain learning diary.

6. Categorize problems weekly, target weak areas.
Maths

7. Re-solve & explain tough problems.
