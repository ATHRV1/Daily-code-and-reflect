Question Leetcode: 2131. Longest Palindrome by Concatenating Two Letter Words

Solution:
class Solution {
public:
    int longestPalindrome(vector<string>& words) {
        int ans=0;
        bool c=false;
        unordered_map<string,int> mpp;
        for(string s: words) mpp[s]++;
        for(string s: words){
            if(s[0]==s[1] && mpp[s]>0){
                if(mpp[s]%2){
                    ans+=(mpp[s]-1)*2;
                    c=true;
                }
                else{
                    ans+=mpp[s]*2;
                }
                mpp[s]=0;
            }
            else if(mpp[s]>0){
                string t="";
                t+=s[1];
                t+=s[0];
                if(mpp[t]>0){
                    ans+=min(mpp[s],mpp[t])*4;
                    mpp[s]=0;
                    mpp[t]=0;
                }
            }
        }
        if(c) ans+=2;
        return ans;
    }
};

Diary:
1. Predict pattern & approach before coding.
Initially i though it had something to do with dp but on careful examination i found out this is pattern matching.

2. Think loud, write down why stuck.
I got stuck because i was not able to identify what to do with the strings having same letters and i took the max and added it normally which was wrong

3. Code brute force if needed â€” clarity > shortcut.
I coded normal brute force with multiplication by 2 on every found match but that did not work due to 1 odd same string could be added later as well.

4. After solve: 1 key learning, 1 mistake, 1 pattern.
1 learning: think more about edge cases
1 mistake: did a silly mistake on counting the total number and maxi thing
1 learning; read questions more carefully and calmly think more deeply

5. Maintain learning diary.
6. Categorize problems weekly, target weak areas.
7. Re-solve & explain tough problems.
